# TODO ENV differences
cache_path: "cache/alfredo_db.sqlite"

command_prefix: "!"

logging_config: "config/logging_config.yaml"

error_messages:
  missing_input: "Missing mandatory arguments. Check !help and try again"
  bad_input: "Provided input for {cmd} is not valid. Details: {e}"
  prompt_timeout: "Took too long to response. Stopping execution of {cmd}"
  user_not_registered: "User not registered. Can't execute {cmd}."
  admin_permission_needed: "{cmd} needs admin access. Can't execute!"
  bad_field_update: "{cmd} failed due to a bad field update attempt: {e}"
  bad_argument: "Invalid input for command {cmd}: {arg}"
  command_not_found: "{cmd} Failed because of server error: {e}"
  unknown_command: "{cmd} is unknown to alfredo. Try !help or !start."
  msg_reaction: "Commands start with '!'"

messages:
  ong_transaction_exists: "Found an ongoing transaction. Data:\n {transaction}"

discord:
  project: "ALFREDO BOT"
  users_to_tag:
    PROD:
      - "194543162604126208"
    LOCAL: 
      - "194543162604126208"

main_logger_name: "alfredo_logger"
backup_logger_name: "backup_logger"
test_logger_name: "test_logger"

user_input_schemas: "config/schemas/user_inputs.yaml"

float_precision: 4

input_prompt_timeout: 30

google_sheets:
  version: "v4"
  service_file: "secrets/google.json"
  rps:
  # keys under read and write need to match __init__ args of async_rps_limiter.AsyncLimiter class
    read:
      rps: 1
    write:
      rps: 1
  transaction_tab:
    name: "alfredo_transactions"
    schema:
      # Keys need to match transaction table's columns in DB
      created:
        sheet_name: "Created Unix Millsec"
        type: "Int64"
      username:
        sheet_name: "User"
        type: "Int64"
      amount:
        sheet_name: "Amount"
        type: "Float64"
      currency:
        sheet_name: "Currency"
        type: "Utf8"
      category_name:
        sheet_name: "Category"
        type: "Utf8"
      comment:
        sheet_name: "Comment"
        type: "Utf8"
      split_percent:
        sheet_name: "Split"
        type: "Float64"
    row_limit: 1000000
  hdr_index: 1
  sheet_id_parsing:
    id_len: 44
    url_pattern: "docs.google.com\/spreadsheets"
    id_pattern: "spreadsheets\/d\/(.+)\/"

secrets: secrets/secrets.yaml

commands_metadata: "config/commands.yaml"

cog_names:
  account: "account"
  transaction: "transaction"
  category: "category"

validation:
# Maps key to validator function to apply to it
  spreadsheet: "sheet_input_to_sheet_id"
  split_percent: "number_to_percent"
